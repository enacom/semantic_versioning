{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ENACOM - Versionamento Sem\u00e2ntico na pr\u00e1tica Refer\u00eancia: Semantic Versioning 2.0.0 1. Os n\u00fameros de vers\u00e3o Dado um n\u00famero de vers\u00e3o MAJOR . MINOR .PATCH, incremente a: vers\u00e3o Maior(MAJOR): quando fizer mudan\u00e7as incompat\u00edveis na API, vers\u00e3o Menor(MINOR): quando adicionar funcionalidades mantendo compatibilidade, vers\u00e3o de Corre\u00e7\u00e3o(PATCH): quando corrigir falhas mantendo compatibilidade. Sob este esquema, os n\u00fameros de vers\u00e3o e a forma como eles mudam transmitem o significado do c\u00f3digo subjacente e o que foi modificado de uma vers\u00e3o para a pr\u00f3xima. 2. Clonar reposit\u00f3rios de exemplo Usar chave SSH git clone git@github.com:enacom/simplified_example.git git clone git@github.com:enacom/customized_example.git git clone git@github.com:enacom/gateway_example.git Usar URL git clone https://github.com/enacom/simplified_example.git git clone https://github.com/enacom/customized_example.git git clone https://github.com/enacom/gateway_example.git 3. Inicializar GitFlow Refer\u00eancia: https://danielkummer.github.io/git-flow-cheatsheet/ Acessar um diret\u00f3rio dos reposit\u00f3rios de exemplo e iniciar o git flow com branchs com nomenclatura padr\u00e3o (usar op\u00e7\u00e3o --defaults ) cd gateway_example/ git flow init --defaults GitFlow j\u00e1 inicializado git flow init --defaults Already initialized for gitflow. To force reinitialization, use: git flow init -f N\u00e3o \u00e9 necess\u00e1rio reinicializar o GitFlow, a menos que queria redefinir os nomes das branchs . GitFlow sem inicializar git flow init --defaults Using default branch names. Which branch should be used for bringing forth production releases? - main Branch name for production releases: [ main ] Branch name for \"next release\" development: [ develop ] How to name your supporting branch prefixes? Feature branches? [ feature/ ] Bugfix branches? [ bugfix/ ] Release branches? [ release/ ] Hotfix branches? [ hotfix/ ] Support branches? [ support/ ] Version tag prefix? [] Hooks and filters directory? [ .../.git/hooks ] Em hooks e filtros ... corresponde ao caminho absoluto do reposit\u00f3rio. 4. Desenvolvimento de uma nova funcionalidade Criar nova branch em feature nova funcionalidade, de documenta\u00e7\u00e3o, por exemplo. git flow feature start documentation Ambiente virtual e mkdocs V\u00eddeo de refer\u00eancia: Documentado projetos com MkDocs - Live de Python #189 Ativar o ambiente virtual e instalar as depend\u00eancias poetry shell poetry install Criar novo projeto de documenta\u00e7\u00e3o, a partir do diret\u00f3rio corrente mkdocs new . Ser\u00e1 criado o diret\u00f3rio docs e o arquivo de configura\u00e7\u00e3o mkdocs.yml Caso j\u00e1 exista o arquivo de configura\u00e7\u00e3o, ser\u00e1 informado que o projeto j\u00e1 exite mkdocs new . INFO - Project already exists. Desenvolvimento e controle de vers\u00e3o Desenvolver a funcionalidade, visualizar e adicionar as mudan\u00e7as git add docs mkdocs.yml Confirmar as mudan\u00e7as para uma nova vers\u00e3o git commit Um editor de texto ir\u00e1 abrir para colocar uma mensagem clara sobre as mudan\u00e7as Publicar as mudan\u00e7as git flow feature publish documentation Testar e finalizar a feature git flow feature finish documentation Merge branch 'feature/documentation' into develop Resolver poss\u00edveis conflitos com a branch develop Publicar a develop git push Se a branch develop n\u00e3o existir remotamente ainda \u00e9 necess\u00e1rio definir a refer\u00eancia no reposit\u00f3rio remoto git push --set-upstream origin develop Publicar a develop git push 5. Criar uma nova vers\u00e3o Gerar uma nova release de acordo com a versionamento sem\u00e2ntico MAJOR . minor .patch. git flow release start v0.1.0 Publicar a nova release git flow release publish v0.1.0 Homologar a nova funcionalidade e finalizar a vers\u00e3o git flow release finish v0.1.0 Escrever uma mensagem simples e explicativa das mudan\u00e7as da release! Publicar as tags git push origin --tags","title":"ENACOM - Versionamento Sem\u00e2ntico na pr\u00e1tica"},{"location":"#enacom-versionamento-semantico-na-pratica","text":"Refer\u00eancia: Semantic Versioning 2.0.0","title":"ENACOM - Versionamento Sem\u00e2ntico na pr\u00e1tica"},{"location":"#1-os-numeros-de-versao","text":"Dado um n\u00famero de vers\u00e3o MAJOR . MINOR .PATCH, incremente a: vers\u00e3o Maior(MAJOR): quando fizer mudan\u00e7as incompat\u00edveis na API, vers\u00e3o Menor(MINOR): quando adicionar funcionalidades mantendo compatibilidade, vers\u00e3o de Corre\u00e7\u00e3o(PATCH): quando corrigir falhas mantendo compatibilidade. Sob este esquema, os n\u00fameros de vers\u00e3o e a forma como eles mudam transmitem o significado do c\u00f3digo subjacente e o que foi modificado de uma vers\u00e3o para a pr\u00f3xima.","title":"1. Os n\u00fameros de vers\u00e3o"},{"location":"#2-clonar-repositorios-de-exemplo","text":"","title":"2. Clonar reposit\u00f3rios de exemplo"},{"location":"#usar-chave-ssh","text":"git clone git@github.com:enacom/simplified_example.git git clone git@github.com:enacom/customized_example.git git clone git@github.com:enacom/gateway_example.git","title":"Usar chave SSH"},{"location":"#usar-url","text":"git clone https://github.com/enacom/simplified_example.git git clone https://github.com/enacom/customized_example.git git clone https://github.com/enacom/gateway_example.git","title":"Usar URL"},{"location":"#3-inicializar-gitflow","text":"Refer\u00eancia: https://danielkummer.github.io/git-flow-cheatsheet/ Acessar um diret\u00f3rio dos reposit\u00f3rios de exemplo e iniciar o git flow com branchs com nomenclatura padr\u00e3o (usar op\u00e7\u00e3o --defaults ) cd gateway_example/ git flow init --defaults","title":"3. Inicializar GitFlow"},{"location":"#gitflow-ja-inicializado","text":"git flow init --defaults Already initialized for gitflow. To force reinitialization, use: git flow init -f N\u00e3o \u00e9 necess\u00e1rio reinicializar o GitFlow, a menos que queria redefinir os nomes das branchs .","title":"GitFlow j\u00e1 inicializado"},{"location":"#gitflow-sem-inicializar","text":"git flow init --defaults Using default branch names. Which branch should be used for bringing forth production releases? - main Branch name for production releases: [ main ] Branch name for \"next release\" development: [ develop ] How to name your supporting branch prefixes? Feature branches? [ feature/ ] Bugfix branches? [ bugfix/ ] Release branches? [ release/ ] Hotfix branches? [ hotfix/ ] Support branches? [ support/ ] Version tag prefix? [] Hooks and filters directory? [ .../.git/hooks ] Em hooks e filtros ... corresponde ao caminho absoluto do reposit\u00f3rio.","title":"GitFlow sem inicializar"},{"location":"#4-desenvolvimento-de-uma-nova-funcionalidade","text":"Criar nova branch em feature nova funcionalidade, de documenta\u00e7\u00e3o, por exemplo. git flow feature start documentation","title":"4. Desenvolvimento de uma nova funcionalidade"},{"location":"#ambiente-virtual-e-mkdocs","text":"V\u00eddeo de refer\u00eancia: Documentado projetos com MkDocs - Live de Python #189 Ativar o ambiente virtual e instalar as depend\u00eancias poetry shell poetry install Criar novo projeto de documenta\u00e7\u00e3o, a partir do diret\u00f3rio corrente mkdocs new . Ser\u00e1 criado o diret\u00f3rio docs e o arquivo de configura\u00e7\u00e3o mkdocs.yml Caso j\u00e1 exista o arquivo de configura\u00e7\u00e3o, ser\u00e1 informado que o projeto j\u00e1 exite mkdocs new . INFO - Project already exists.","title":"Ambiente virtual e mkdocs"},{"location":"#desenvolvimento-e-controle-de-versao","text":"Desenvolver a funcionalidade, visualizar e adicionar as mudan\u00e7as git add docs mkdocs.yml Confirmar as mudan\u00e7as para uma nova vers\u00e3o git commit Um editor de texto ir\u00e1 abrir para colocar uma mensagem clara sobre as mudan\u00e7as Publicar as mudan\u00e7as git flow feature publish documentation Testar e finalizar a feature git flow feature finish documentation Merge branch 'feature/documentation' into develop Resolver poss\u00edveis conflitos com a branch develop Publicar a develop git push Se a branch develop n\u00e3o existir remotamente ainda \u00e9 necess\u00e1rio definir a refer\u00eancia no reposit\u00f3rio remoto git push --set-upstream origin develop Publicar a develop git push","title":"Desenvolvimento e controle de vers\u00e3o"},{"location":"#5-criar-uma-nova-versao","text":"Gerar uma nova release de acordo com a versionamento sem\u00e2ntico MAJOR . minor .patch. git flow release start v0.1.0 Publicar a nova release git flow release publish v0.1.0 Homologar a nova funcionalidade e finalizar a vers\u00e3o git flow release finish v0.1.0 Escrever uma mensagem simples e explicativa das mudan\u00e7as da release! Publicar as tags git push origin --tags","title":"5. Criar uma nova vers\u00e3o"}]}